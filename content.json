{"meta":{"title":"hao11","subtitle":"","description":"","author":"hao11","url":"http://example.com","root":"/"},"pages":[{"title":"我的朋友","date":"2023-11-06T12:03:53.698Z","updated":"2023-11-06T12:03:53.698Z","comments":true,"path":"PY.html","permalink":"http://example.com/PY.html","excerpt":"","text":""},{"title":"文章归档","date":"2023-11-06T11:15:02.537Z","updated":"2023-11-06T11:12:05.834Z","comments":true,"path":"archive.html","permalink":"http://example.com/archive.html","excerpt":"","text":""},{"title":"WEB","date":"2019-11-16T02:46:27.000Z","updated":"2023-10-08T16:10:22.512Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":"title: MISCdate: 2019-11-16 10:46:27layout: category title: CTFdate: 2019-11-16 10:46:27layout: category"},{"title":"标签","date":"2019-11-16T02:46:27.000Z","updated":"2023-09-29T18:58:26.915Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"NewStarCTF2023week3","slug":"NewStarCTF2023week3","date":"2023-10-15T14:00:59.226Z","updated":"2023-11-02T11:29:03.222Z","comments":true,"path":"2023/10/15/NewStarCTF2023week3/","link":"","permalink":"http://example.com/2023/10/15/NewStarCTF2023week3/","excerpt":"","text":"Misc阳光开朗大男孩 下载得到两个txt文件，初步判断，一个是emoji解密，一个是社会主义核心价值观解密 解密社会主义核心价值观显示是有password，那么可以判断flag.txt是一个emoji-aes加密 emoji-aes解密，得到flag 2-分析 打开文件，排列HTTP，找到了一个类型与攻击的传参 追踪TCP流后，查看到数据包，200响应，判定存在漏洞的文件名是index.php，WevShell文件名是wh1t3g0d.php 查找到一段类似于登录成功的数据包，追踪TCP流，果然是登录数据包，所以得到攻击者登录使用的用户名是best_admin 根据题意进行md5加密，得到flag 大怨种 打开得到一张gif图片 利用ps，得到一张汉信码 利用汉信码解密得到flag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"}]},{"title":"NewStarCTF2023week2","slug":"NewStarCTF2023week2","date":"2023-10-14T17:11:11.402Z","updated":"2023-10-16T01:27:50.050Z","comments":true,"path":"2023/10/15/NewStarCTF2023week2/","link":"","permalink":"http://example.com/2023/10/15/NewStarCTF2023week2/","excerpt":"","text":"Web游戏高手 开启环境，发现需要超过100000分才能获得flag，查看源码，发现控制分数的代码 控制台发送执行，开启游戏，发现分数更改，得到flag ez_sql 打开环境，发现是get传参给id值的sql注入 利用sqlmap成功得到flag include 0。0 根据代码内容，尝试使用php伪协议，进行突破，发现base64和rot被过滤，尝试使用其他编码，成功绕过，得到flag。 Upload again! 测试发现，抓包更改后缀无法绕过，上传内容包含&lt;?会被检测 上传.htaccess使jpg文件能执行，在上传用js代码编写的一句话木马 使用蚁剑连接获得flag Unserialize？ 利用了php反序列化和php函数绕过，直接参入参数，可得到flag R!!C!!E!! 起初没有任何信息，但在尝试输入.git的时候，回显403，说明存在目录，但无法访问 利用GitHack扫描得到.git泄露文件，查看得到源码 根据源码指示，绕过preg_match，使用print_r进行打印 利用getallheaders()返回所有的HTTP头信息 将数组转化为字符串，且输出需要的值，一般可以用的函数有 123456end() - 将内部指针指向数组中的最后一个元素，并输出。next() - 将内部指针指向数组中的下一个元素，并输出。prev() - 将内部指针指向数组中的上一个元素，并输出。reset() - 将内部指针指向数组中的第一个元素，并输出。each() - 返回当前元素的键名和键值，并将内部指针向前移动。implode() - 将一个数组转化为字符串 因为要end被限制，这里使用了next 因为使用了next，输出的字符串是ua头，抓包更改us头，再将修改print_r为eval，成功得到flag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"}]},{"title":"2023 SWPU NSS","slug":"2023 SWPU NSS","date":"2023-10-14T06:38:14.332Z","updated":"2023-11-02T11:29:04.760Z","comments":true,"path":"2023/10/14/2023 SWPU NSS/","link":"","permalink":"http://example.com/2023/10/14/2023%20SWPU%20NSS/","excerpt":"","text":"Webcolorful_snake 开启环境，是个小游戏，先按思路，查看一下js源码，找到了this_is_real_flag 用ascii转换字符，得到了flag NSS_HTTP_CHEKER 开启环境，需要传参，伪造Cookie，UA头和XFF，利用BP抓包修改伪造，得到flag 一键连接 根据源码指示，一步一步传参绕过 md5_1 !&#x3D;&#x3D; md5_2 &amp;&amp; md5(md5_1) &#x3D;&#x3D;&#x3D; md5(md5_2) sha1_1 !&#x3D; sha1_2 &amp;&amp; sha1(sha1_1) &#x3D;&#x3D;&#x3D; sha1(sha1_2) 二者可以用数组进行绕过 file_get_contents($new_player) &#x3D;&#x3D;&#x3D; “Welcome to NSSCTF!!!” 绕过file_get_contents，使用data伪协议进行绕过 eval($_POST[‘Nss’])则随意使用一个查询命令查询flag Pingpingping 首先使用Ping_ip.exe回显错误，证明无传参进入，根据php特性，将_更换为[时，成功传参，在使用cat &#x2F;flag 查询flag ez_talk 创建一句话木马 显示需要图片才可以执行 更改后缀为jpg上传并抓包修改文件后缀，回显内容变更，判断文件内容被检测，但抓包可以绕过图片检测 制作图片马 上传修改后缀，回显成功上传 成功执行 用蚁剑进行连接 连接成功，获得flag 查查need 在学号处尝试使用盲注时，发现sql语言执行，怀疑是sql注入 利用sqlmap进行自动化注入，得到了flag miscGIF Code![QR Code](.&#x2F;2023SWPUNSS&#x2F;QR Code.gif) 动态二维码 利用ps打开，逐帧重组，扫描二维码得到flag 咱们玩个游戏吧 下载得到一堆图片 利用ps进行重组，扫描得到一串url加密编码，解密得到flag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"}]},{"title":"PolarD&N","slug":"PolarD&N","date":"2023-10-11T08:26:23.164Z","updated":"2023-11-05T17:09:33.275Z","comments":true,"path":"2023/10/11/PolarD&N/","link":"","permalink":"http://example.com/2023/10/11/PolarD&N/","excerpt":"","text":"Misc0和255 下载查看文件，发现一串图片生成代码和图片分布指示 更改python脚本，利用python脚本生成二维码 按题目要求生成md5值，得到flag 01 下载文件，发现是一个加密的压缩包和一个二进制图片文件 利用Python生成二维码 扫二维码得到密码p@ssw0rd! flag被加密，利用兽音解密 得到flag 100RGB Base100解密 十进制转字符 ascii码 解密得到flag 超级简单流量 追踪TCP流，查看得到flag 无限解base64 利用python脚本进行解密 经过脚本运行，在第50次base64解密得到flag LSB 利用StegSolve工具进行调节，查看到一些不同，仿佛有个二维码 将RGB调成0，保存文件 查看文件，得到flag 爆破鬼才 下载图片，利用binwalk查看图片，发现有一个zip和一个txt 利用binwalk提取文件，得到一个zip和txt 利用winhex打开zip文件，发现不是一个伪加密的zip，利用ARCHPR爆破成功，得到密码 输入密码，打开flag.txt，得到flag 送分 下载文件，发现是一段音频 利用Audacity进行调节，得到flag 隐写 全选文档，将字体改为任意非白色，得到第一段flag 设置文档选项，勾选隐藏文字，返回查看文档，得到第二段flag 将文档改为压缩包后缀，查看压缩包，得到最后一段flag 二维码 下载图片，发现无法打开，利用010查看，发现是一个base64加密的图片格式 利用脚本生成二维码，扫描二维码得到flag 大礼包 下载文件，发现是一个加密包 利用ARCHPR爆破得到密码 得到一张图片，利用winhex查看十六进制文件，发现一串类似于base加密的密文 经过base32和base64解密之后，发现是接近于其他无法适用base编码进行解密 利用栅栏密码进行解密，发现有flag的影子 利用rot13解密，得到flag 可爱的冰墩墩 下载图片，利用binwalk查看，发现一个zip文件和pyc文件 提取得到一个zip文件和pyc文件 发现需要密码，利用ARCHPR解密得到密码 打开zip后，发现一个pyc文件，反编译得到py代码 根据py代码，进行反推，先转化为ascii，在进行reverse解密，在进行rot47解密，得到flag Web签到题 打开环境，没有任何提示，抓包，发现cookie类似于突破点，尝试修改 发现回显，进行base64解密，得到一个php文件路径 进入php文件，查看代码，利用php伪协议进行传参，绕过str_replace函数，得到一串base64编码，解密得到flag 签到 开启环境，但无法提交任何参数 查看源码，发现适用post传参，传入指定key值得到flag GET-POST 打开环境发现需要get传参id&#x3D;1，传入后，需要post传参jljcxy&#x3D;flag，传入后，得到flag swp 打开环境，发现是swp文件泄露（vim编辑器未保存就退出的临时文件） PHP_PCRE回溯次数限制绕过某些安全限制 利用python脚本绕过，得到flag jwt 打开环境，先注册登录，没发现任何信息，抓包发现使用jwt验证 利用jwt-cracker爆破，得到密钥SYSA 利用jwt解密，得到jwt验证密文 进入个人中心，抓包，将原jwt替换为破解加密后的jwt，放行得到flag 简单rce 开启环境，发现需要利用get传入sys参数和post传入yyds参数并且要绕过preg_match函数 传入参数，绕过函数后得到flag 召唤神龙 打开环境，查看抓取的数据包，发现一串代码很可疑 放入控制台运行，得到flag seek flag 打开环境，查看数据包，发现flag2 抓包，修改cookie的id值，放行得到flag1 查看源码，发现写着抓虫，利用7kbscan扫描得到一个robots，查看得到flag3 蜜雪冰城吉警店 打开环境，查看源码，得到一个js加密的密文代码 利用js解密，查看明文得到flag login 打开环境，查看源码，发现有类似于学号的格式 输入学号，提交得到一个f，疑似flag 抓包，进行爆破，发现20200103时回显了一个l，继续查看，得到完整的flag","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"}]},{"title":"NewStarCTF2023week1","slug":"NewStarCTF2023week1","date":"2023-10-09T02:52:02.499Z","updated":"2023-11-06T11:28:55.018Z","comments":true,"path":"2023/10/09/NewStarCTF2023week1/","link":"","permalink":"http://example.com/2023/10/09/NewStarCTF2023week1/","excerpt":"","text":"WebBegin of PHPmd5弱比较，get传参给key1和key2，使得key1和key2的md5值出现0e开头key3与key4相同，都使用数组进行绕过key5利用换行符进行绕过传入换行符给flag5即可得出flagflag{d5c90421-81d4-40e3-8cfc-5bab099ee54c} 泄漏的秘密抓包和代码都没看出什么东西，只能用工具扫，发现429报错，一个一个常见的挨个试，试出了www.zip和robots.txt得到flagflag{r0bots_1s_s0_us3ful_4nd_www.zip_1s_s0_d4ng3rous} Begin of Upload查看源码，只允许上传”jpg”, “jpeg”, “png”, “gif”格式，但是属于前端验证，尝试抓包绕过绕过成功，利用蚁剑连接在根目录获取到flagflag{bbcca8ef-8101-47bf-b096-19fa8fab3895} Begin of HTTP打开之后，提示get传入ctf的参数传入ctf参数后，又需要post传入secret参数，但有需要找一找在源码中，找到经过base64加密过的secret参数，解密后传入后需要将验证power更改成ctfer，进行抓包修改power值更改完power后，又需要更改UA头，用bp抓包后发送Repeater，进行修改发送回显需要从newstarctf.com进行访问伪造referer，发送后回显需要本地用户进行访问想到XFF伪造，可是参入后，还是回显本地用户访问，可见服务器不是检测XFF查了一下，用X-Real-IP伪造，顺利得到flagflag{d29a88b8-18b4-4df8-b6b0-aaa2e82fecee} ErrorFlask显示入number1和number2的参数随机传入一个参数，显示在源码中，但源码中没有其他的内容参数非整型字符时报错，出现了flagflag{Y0u_@re_3enset1ve_4bout_deb8g} R!C!E!看代码执行，先传入参数传入的参数符合代码执行，但并于回显根据PHP特性，当_更换为[时，回显根据代码执行条件，利用php特性与命令相似的原则进行代码过滤，得到flagflag{108524d1-a0c7-48a3-9030-80717a5ac9f7} EasyLogin发现是登录页面，源码中也没有可利用的信息创建用户，发现到了linux界面，退出对话，发现&#x2F;home下有个admin用户，但没有其他目录或其他方式获取admin的密码利用bp弱口令top1000进行爆破，爆破出密码，登录后查看到的信息还是和之前一样查看抓包信息，找到一个响应码不同的数据包，点击响应包，查看请求，发现flagflag{0b35071f-33ce-41eb-ba16-3562b4561222} CRYPTOBrainfuck看文档得知是rainfuck&#x2F;ook密码，解密得出flagflag{Oiiaioooooiai#b7c0b1866fe58e12} Caesar’s Secert看文档得知是凯撒密码，解密得出flagflag{ca3s4r’s_c1pher_i5_v4ry_3azy} Fence看文档得知是栅栏密码，解密得出flagflag{reordering_the_plaintext#686f8c03} Vigenère看文档得知是维吉尼亚密码，已知flag解出key为kfc，解密得出flagflag{la_c1fr4_del_5ign0r_giovan_batt1st4_b3ll5s0} Babyencoding三串字符，三种加密，分别是base64、base32、unencode，解密得出flagflag{dazzling_encoding#4e0ad4f0ca08d1e1d0f10c0c7afe422fea7c55192c992036ef623372601ff3a} MiscCyberChef’s Secret先用base32，然后base58，最后base64，得出flagflag{Base_15_S0_Easy_^_^} 机密图片扫出来是Welcome to NewStarCTF 2023!；只能重新找办法，放进Stegsolve一调色，发现是LSB隐写导出查看十六进制文件发现flagflag{W3lc0m3_t0_N3wSt4RCTF_2023_7cda3ece} 空白格打开文件，一片空白，但可以选中，判断是whitespace隐写解密得出flagflag{w3_h4v3_to0_m4ny_wh1t3_sp4ce_2a5b4e04} 流量！鲨鱼！一堆数据包，基本响应是404和403，看到一个疑似flag的数据包，响应是200，导出查看base64编码解密得出flagflag{Wri35h4rk_1s_u53ful_b72a609537e6} 压缩包们用压缩软件打开，发现一个flag.zip，但提示文件损坏进入十六进制文件，发现文件头损坏，修复后可以成功解压缩但又发现flag.zip也是损坏的，继续查看flag.zip的十六进制文件修复完成，但需要密码，在flag.zip的十六进制中，发现了一串疑似base64编码的字符串，尝试解密解密发现，给了我们一个密码是6位数字的提示，那就只能爆破一下爆破得到密码，解压flag.zip查看flag.txt，得到flagflag{y0u_ar3_the_m4ter_of_z1111ppp_606a4adc} 隐秘的眼睛图片上有一些小点，尝试解码flag就出来了flag{R0ck1ng_y0u_63b0dc13a591}","categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"}]},{"title":"Hello World","slug":"helo","date":"2023-09-29T18:46:23.472Z","updated":"2023-09-29T18:46:34.299Z","comments":true,"path":"2023/09/30/helo/","link":"","permalink":"http://example.com/2023/09/30/helo/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"MISC","slug":"MISC","permalink":"http://example.com/categories/MISC/"}],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2023-09-28T19:24:50.617Z","updated":"2023-09-29T18:58:38.341Z","comments":true,"path":"2023/09/29/hello-world/","link":"","permalink":"http://example.com/2023/09/29/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"WEB","slug":"WEB","permalink":"http://example.com/categories/WEB/"}],"tags":[{"name":"php","slug":"php","permalink":"http://example.com/tags/php/"}]}],"categories":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/categories/CTF/"},{"name":"MISC","slug":"MISC","permalink":"http://example.com/categories/MISC/"},{"name":"WEB","slug":"WEB","permalink":"http://example.com/categories/WEB/"}],"tags":[{"name":"CTF","slug":"CTF","permalink":"http://example.com/tags/CTF/"},{"name":"php","slug":"php","permalink":"http://example.com/tags/php/"}]}